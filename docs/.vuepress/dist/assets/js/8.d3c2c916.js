(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{193:function(t,a,e){"use strict";e.r(a);var i=e(0),r=Object(i.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"组件封装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件封装","aria-hidden":"true"}},[t._v("#")]),t._v(" 组件封装")]),t._v(" "),e("ul",[e("li",[t._v("组件函数名以 on 开头")]),t._v(" "),e("li",[t._v("组件中尽量少使用 ref，这会破坏组件的封装性")]),t._v(" "),e("li",[t._v("所有公共组件，用 zv-包装")]),t._v(" "),e("li",[t._v("涉及到业务逻辑的组件，在封装的时候，通过 mixin，将业务逻辑代码和基本组件代码区分")]),t._v(" "),e("li",[t._v("可以抽取的布局组件，统一存放在 layouts 文件夹中")])]),t._v(" "),e("h2",{attrs:{id:"业务组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#业务组件","aria-hidden":"true"}},[t._v("#")]),t._v(" 业务组件")]),t._v(" "),e("ul",[e("li",[t._v("对于一些可能被多处引用的功能模块，建议提炼成业务组件统一管理")]),t._v(" "),e("li",[t._v("只负责一块相对独立，稳定的功能")]),t._v(" "),e("li",[t._v("没有单独的路由配置")]),t._v(" "),e("li",[t._v("可能是纯静态的，也可能包含自己的 state，但不涉及 vuex 的数据流，仅受父组件传递的参数控制")])])])},[],!1,null,null,null);a.default=r.exports}}]);