(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{227:function(t,e,a){"use strict";a.r(e);var r=a(2),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("PC 端 是以Vue为技术栈进行开发的SPA应用，主要涉及到的第三方库有Vuex、vue-router、Vue-i18n、element-ui、axios、js-cookies等。")]),t._v(" "),a("h2",{attrs:{id:"mpa间数据交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mpa间数据交互"}},[t._v("#")]),t._v(" MPA间数据交互")]),t._v(" "),a("p",[t._v("PC 端 多个SPA应用的数据共享基于浏览器cookies, MPA公用数据存入、删除数据相关函数统一在utils/auth.js 下统一管理,开发者可根据业务需要导入对应的函数")]),t._v(" "),a("h2",{attrs:{id:"ui-组件库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui-组件库"}},[t._v("#")]),t._v(" UI 组件库")]),t._v(" "),a("p",[t._v("我们在 element-ui 组件的基础上，封装了一套适用于我们产品的 UI 组件库 "),a("a",{attrs:{href:"https://1934266584.github.io/pc_document/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ZvUI"),a("OutboundLink")],1),t._v("，且由专人负责维护。项目的开发者只需要关注已有组件的用法即可，对于组件库暂无的组件，可自行封装。组件的用法与 element-ui 基本保持一致。在组件库的开发文档上有详细说明，这里不做过多介绍。")])])}),[],!1,null,null,null);e.default=s.exports}}]);