(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{208:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("移动端 为混合开发，借助 APICloud 的 SuperWebviewSDK 实现 web 和原生的交互，并将所有的交互方法，封装在 utils 目录下的 hybrid 文件夹中。web 侧，以 Vue 为技术栈进行开发，主要涉及到的第三方库有 Vuex、vue-router、Vue-i18n、vant、axios 等。原生侧，iOS 为 Objective-C 开发，Android 为 Java 开发。此文档主要介绍 web 侧和 web 与原生交互的开发。")]),t._v(" "),s("h2",{attrs:{id:"架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构","aria-hidden":"true"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),s("p",[t._v("移动端的架构是基于 SuperWebviewSDK 搭建的。包括 web 与原生的交互、web 模块的显示与关闭、共享数据、各个 web 模块间的交互、热更新等。其中每个 web 模块都会用一个 frame 去承载，在每个 web 模块加载前都需要先绑定 SuperWebviewSDK 的 apiready 方法，并在其中处理需要的公共数据。")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("所有会用到的 SuperWebviewSDK 中的方法都会被封装在 Hybrid 类中，并且会将类实例绑定到 Vue 实例上。不要在页面中直接使用 api.xx 去调用 SuperWebviewSDK 的方法。")])]),t._v(" "),s("img",{attrs:{src:t.$withBase("/jiagou.png"),alt:"移动端架构图"}}),t._v(" "),s("h2",{attrs:{id:"调试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#调试","aria-hidden":"true"}},[t._v("#")]),t._v(" 调试")]),t._v(" "),s("p",[t._v("web 模块集成 vconsole 作线上调试")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("process"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NODE_ENV")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"production"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" VConsole "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vconsole/dist/vconsole.min"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VConsole")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当需要集成到手机 APP 进行调试时，扫下面二维码，安装 APP，输入相应域名进行调试。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[t._v("支持连接电脑 IP 进行调试，此时手机和电脑需在同一 WiFi 下。")])]),t._v(" "),s("p",[t._v("二维码还在制作中... 🙂")]),t._v(" "),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),s("h2",{attrs:{id:"web-ui-组件库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-ui-组件库","aria-hidden":"true"}},[t._v("#")]),t._v(" web UI 组件库")]),t._v(" "),s("p",[t._v("我们在 vant 组件的基础上，封装了一套适用于我们产品的 UI 组件库 "),s("a",{attrs:{href:"http://zvui.lhanyun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("ZvUI"),s("OutboundLink")],1),t._v("，且由专人负责维护。项目的开发者只需要关注已有组件的用法即可，对于组件库暂无的组件，可自行封装。组件的用法与 vant 基本保持一致。在组件库的开发文档上有详细说明，这里不做过多介绍。")])])},[],!1,null,null,null);a.default=n.exports}}]);