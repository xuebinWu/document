(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{230:function(s,t,a){"use strict";a.r(t);var n=a(2),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"版本规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本规范"}},[s._v("#")]),s._v(" 版本规范")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("项目开始开发时，预先新建 develop 分支，并在此分支上进行开发。若要变更分支名，请将./build/release.sh 文件中的分支名一同修改。否则 npm run release 命令会报错。")])]),s._v(" "),a("p",[s._v("项目默认在分支 develop 上开发，并将生产版本代码合并至 master 上。项目中的 bulid 文件夹下的 release 文件中为打包脚本，用于自动上传代码、添加 tag、合并分支。\n正式发布版本时，请使用 npm run release，该命令会自动在分支上打上 tag 值并合并分支至 master 上。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("如果想要重复提交相同版本号的代码，请先将 package.json 中的版本号复原，再删除 Git 上的相应 tag 值。之后再使用 npm run release 提交代码。")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" merge develop\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -e\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Enter release version: "')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" VERSION\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" -p "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Releasing '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v(' - are you sure? (y/n)"')]),s._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -r\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (optional) move to a new line")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$REPLY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("~ ^"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Yy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" version "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v(" --no-git-tag-version\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" tag "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("v")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"release: '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v('"')]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# publish")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin master\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin refs/tags/v"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VERSION")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" checkout develop\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" rebase master\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push origin develop\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),a("p",[s._v("项目的版本号应该根据某些规则进行迭代, 这里推荐使用语义化版本规范, 通过这个规范，用户可以了解版本变更的影响范围。 规则如下:")]),s._v(" "),a("ul",[a("li",[s._v("主版本号：当你做了不兼容的 API 修改 (v1.0.0 -> v2.0.0)")]),s._v(" "),a("li",[s._v("次版本号：当你做了向下兼容的功能性新增 (v1.0.0 -> v1.1.0)")]),s._v(" "),a("li",[s._v("修订号：当你做了向下兼容的问题修正 (v1.0.0 -> v1.0.1)")])]),s._v(" "),a("p",[s._v("项目中已经配置好了打生产包命令，")])])}),[],!1,null,null,null);t.default=e.exports}}]);