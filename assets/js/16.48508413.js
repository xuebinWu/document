(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{196:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git提交日志规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git提交日志规范","aria-hidden":"true"}},[t._v("#")]),t._v(" Git提交日志规范")]),t._v(" "),s("p",[t._v("统一规范的日志利于后期的代码检查和问题排除，使用标准兼容的日志格式更能够与其他工具配合提高项目代码日志的规范性。推荐使用"),s("a",{attrs:{href:"https://conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits Specification"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"日志格式结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志格式结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 日志格式结构")]),t._v(" "),s("p",[t._v("日志内容由几个关键信息组成")]),t._v(" "),s("ul",[s("li",[t._v("type(必填)，表示该次提交的类型，如新增功能还是修复bug等")]),t._v(" "),s("li",[t._v("scope(选填)，表示上下文相关的信息，如lang，"),s("code",[t._v("feat(lang): add polish language")])]),t._v(" "),s("li",[t._v("description(必填)，表示该次提交的简要描述，内容不宜过长")]),t._v(" "),s("li",[t._v("body(选填)，提交的详细描述信息，如果description不足以描述该次提交则可以将更多内容写入body中")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 结构\n<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 示例\nfix: correct minor typos in code\n\nsee the issue for details\n\non typos fixed.\n\nReviewed-by: Z\nRefs #133\n")])])]),s("h2",{attrs:{id:"提交类型说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提交类型说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交类型说明")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Type")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("feat")]),t._v(" "),s("td",[t._v("新增feature")])]),t._v(" "),s("tr",[s("td",[t._v("fix")]),t._v(" "),s("td",[t._v("修复bug")])]),t._v(" "),s("tr",[s("td",[t._v("docs")]),t._v(" "),s("td",[t._v("仅仅修改了文档，比如README, CHANGELOG, CONTRIBUTE等等")])]),t._v(" "),s("tr",[s("td",[t._v("style")]),t._v(" "),s("td",[t._v("仅仅修改了空格、格式缩进、都好等等，不改变代码逻辑")])]),t._v(" "),s("tr",[s("td",[t._v("refactor")]),t._v(" "),s("td",[t._v("代码重构，没有加新功能或者修复bug")])]),t._v(" "),s("tr",[s("td",[t._v("perf")]),t._v(" "),s("td",[t._v("优化相关，比如提升性能、体验")])]),t._v(" "),s("tr",[s("td",[t._v("test")]),t._v(" "),s("td",[t._v("测试用例，包括单元测试、集成测试等")])]),t._v(" "),s("tr",[s("td",[t._v("chore")]),t._v(" "),s("td",[t._v("改变构建流程、或者增加依赖库、工具等")])])])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("更多关于conventional commit规范请去"),s("a",{attrs:{href:"https://www.conventionalcommits.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网查看"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"使用commitlint-husky实现提交日志的规范检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用commitlint-husky实现提交日志的规范检查","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用commitlint+husky实现提交日志的规范检查")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://commitlint.js.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),s("OutboundLink")],1),t._v("配合能够实现提交日志的规范检查。")]),t._v(" "),s("p",[t._v("Husky是一个工具能够让我们非常便捷的执行git hooks，Commitlint提供了对commit message进行检查的工具，如果不符合规范则不允许进行提交操作。")]),t._v(" "),s("ol",[s("li",[t._v("安装commitlint")])]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 安装commitlint\nnpm install --save-dev @commitlint/cli @commitlint/config-conventional\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("编写commitlint配置文件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//编写commitlint配置文件commitlint.config.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@commitlint/config-conventional'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -E HUSKY_GIT_PARAMS"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"使用standard-version自动生成changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用standard-version自动生成changelog","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用standard-version自动生成CHANGELOG")]),t._v(" "),s("p",[t._v("standard-version能够根据符合conventional-commit规范的git提交日志自动的生成项目的CHANGELOG。")]),t._v(" "),s("p",[t._v("standard-version做了三件事情：根据git message生成CHANGELOG；修改version；基于语义化版本规范生成添加版本tag")]),t._v(" "),s("p",[t._v('standard-version能够根据repository.url自动生成issue、commit等地址。git commit -m "feat: xxxxx(#JIRA_ID)"')]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("standard-version"),s("OutboundLink")],1),t._v("不适合于版本频繁发布的项目，存在一定的局限性，是否在项目中使用请根据实际情况考虑")])])])},[],!1,null,null,null);a.default=e.exports}}]);